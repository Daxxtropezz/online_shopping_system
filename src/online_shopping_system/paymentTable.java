/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package online_shopping_system;

import java.sql.*; // gets Connection, PreparedStatement, and ResultSet
import java.util.Vector;
import javax.swing.*; // gets JFrame and JOptionPane
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MIRAFLORES, JOHN PAUL S. - BSIT 2F
 */
public class paymentTable extends javax.swing.JFrame {

    private static final String URL = "jdbc:mysql://localhost:3306/online_shopping_system?allowPublicKeyRetrieval=true&useSSL=false";
    private static final String USERNAME = "root";
    private static final String PASSWORD = "@theHouseof25";

    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rset = null;
    DefaultTableModel RecordTable;
    ResultSetMetaData rsmData;
    Vector columnData;
    int i, q;

    /**
     * Creates new form paymentTable
     */
    public paymentTable() {
        initComponents();
        Order.setVisible(false);
    }

    int xMouse;
    int yMouse;

    public void paymentTable() {
        try {
            conn = DriverManager.getConnection(URL, USERNAME, PASSWORD);
            ps = conn.prepareStatement("SELECT PAYMENT_ID, PRODUCT_NAME, PAYMENT_AMOUNT, PRODUCT_QUANTITY "
                    + "FROM PAYMENT WHERE CUSTOMER_ID = ?");

            ps.setString(1, JPsOnlineShopping.CustID.getText());

            rset = ps.executeQuery();
            rsmData = rset.getMetaData();

            q = rsmData.getColumnCount();

            RecordTable = (DefaultTableModel) paymentTable.getModel();
            RecordTable.setRowCount(0);

            while (rset.next()) {
                columnData = new Vector();

                for (i = 1; i <= q; i++) {
                    columnData.add(rset.getString("PAYMENT_ID"));
                    columnData.add(rset.getString("PRODUCT_NAME"));
                    columnData.add(rset.getString("PAYMENT_AMOUNT"));
                    columnData.add(rset.getString("PRODUCT_QUANTITY"));
                }
                RecordTable.addRow(columnData);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void totalPayment() {
        try {
            conn = DriverManager.getConnection(URL, USERNAME, PASSWORD);
            ps = conn.prepareStatement("SELECT "
                    + "ROUND((SUM(PAYMENT_AMOUNT * PRODUCT_QUANTITY)),2) AS SUBTOTAL, "
                    + "? AS SHIPPING_FEE, "
                    + "ROUND((SUM(PAYMENT_AMOUNT * PRODUCT_QUANTITY) + ?),2) AS TOTAL "
                    + "FROM PAYMENT WHERE CUSTOMER_ID = ?");

            ps.setString(1, JPsOnlineShopping.SFee.getText());
            ps.setString(2, JPsOnlineShopping.SFee.getText());
            ps.setString(3, JPsOnlineShopping.CustID.getText());

            rset = ps.executeQuery();

            while (rset.next()) {
                merchTotal.setText(rset.getString("SUBTOTAL"));
                shippingTotal.setText(rset.getString("SHIPPING_FEE"));
                AmountTotal.setText(rset.getString("TOTAL"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Order = new javax.swing.JPanel();
        orderID = new javax.swing.JLabel();
        paymentJlbl = new javax.swing.JLabel();
        jBtnBack = new javax.swing.JButton();
        message = new javax.swing.JLabel();
        lblPM = new javax.swing.JLabel();
        CurrencySign = new javax.swing.JLabel();
        amountforpay = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        checkoutPanel = new javax.swing.JPanel();
        merchTotal = new javax.swing.JTextField();
        shippingTotal = new javax.swing.JTextField();
        AmountTotal = new javax.swing.JTextField();
        totalAmount = new javax.swing.JTextField();
        ShippingFee = new javax.swing.JTextField();
        Subtotal = new javax.swing.JTextField();
        placeBTN = new javax.swing.JButton();
        removeBTN = new javax.swing.JButton();
        cnclBTN = new javax.swing.JButton();
        chkTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        paymentTable = new javax.swing.JTable();
        paymentMethod = new javax.swing.JComboBox<>();
        lblPaymentMethod = new javax.swing.JLabel();
        HiddenpaymentID = new javax.swing.JTextField();
        HiddenpaymentQuant = new javax.swing.JTextField();
        HiddenpaymentName = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        Order.setBackground(new java.awt.Color(255, 255, 255));
        Order.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        Order.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                OrderMouseDragged(evt);
            }
        });
        Order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                OrderMousePressed(evt);
            }
        });
        Order.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orderID.setFont(new java.awt.Font("Elephant", 1, 18)); // NOI18N
        orderID.setForeground(new java.awt.Color(0, 153, 255));
        orderID.setText("Order ID: ");
        Order.add(orderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 350, 210, -1));

        paymentJlbl.setFont(new java.awt.Font("Elephant", 0, 24)); // NOI18N
        paymentJlbl.setForeground(new java.awt.Color(0, 153, 255));
        paymentJlbl.setText("WAITING FOR PAYMENT");
        Order.add(paymentJlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jBtnBack.setBackground(new java.awt.Color(0, 102, 204));
        jBtnBack.setFont(new java.awt.Font("Gulim", 0, 18)); // NOI18N
        jBtnBack.setForeground(new java.awt.Color(255, 255, 255));
        jBtnBack.setText("<<");
        jBtnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBtnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBackActionPerformed(evt);
            }
        });
        Order.add(jBtnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 50, -1));

        message.setFont(new java.awt.Font("Elephant", 1, 18)); // NOI18N
        message.setForeground(new java.awt.Color(0, 153, 255));
        message.setText("Please Have this amount on delivery day.");
        Order.add(message, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, -1, -1));

        lblPM.setFont(new java.awt.Font("Elephant", 1, 18)); // NOI18N
        lblPM.setForeground(new java.awt.Color(0, 153, 255));
        lblPM.setText("payment method");
        Order.add(lblPM, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, -1, -1));

        CurrencySign.setFont(new java.awt.Font("Elephant", 1, 18)); // NOI18N
        CurrencySign.setForeground(new java.awt.Color(0, 153, 255));
        CurrencySign.setText("PHP");
        Order.add(CurrencySign, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, -1, -1));

        amountforpay.setFont(new java.awt.Font("Elephant", 1, 18)); // NOI18N
        amountforpay.setForeground(new java.awt.Color(0, 153, 255));
        amountforpay.setText("0.0");
        Order.add(amountforpay, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/online_shopping_system/Assets/CartWaitingsmall.gif"))); // NOI18N
        Order.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 350, 280));

        checkoutPanel.setBackground(new java.awt.Color(108, 122, 137));
        checkoutPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        checkoutPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                checkoutPanelMouseDragged(evt);
            }
        });
        checkoutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkoutPanelMousePressed(evt);
            }
        });
        checkoutPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        merchTotal.setEditable(false);
        merchTotal.setBackground(new java.awt.Color(214, 217, 223));
        merchTotal.setForeground(new java.awt.Color(0, 0, 0));
        merchTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        merchTotal.setText("0.0");
        merchTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        checkoutPanel.add(merchTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 290, 80, -1));

        shippingTotal.setEditable(false);
        shippingTotal.setBackground(new java.awt.Color(214, 217, 223));
        shippingTotal.setForeground(new java.awt.Color(0, 0, 0));
        shippingTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        shippingTotal.setText("0.0");
        shippingTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        checkoutPanel.add(shippingTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 310, 80, -1));

        AmountTotal.setEditable(false);
        AmountTotal.setBackground(new java.awt.Color(214, 217, 223));
        AmountTotal.setForeground(new java.awt.Color(0, 0, 0));
        AmountTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AmountTotal.setText("0.0");
        AmountTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        checkoutPanel.add(AmountTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 330, 80, -1));

        totalAmount.setEditable(false);
        totalAmount.setBackground(new java.awt.Color(108, 122, 137));
        totalAmount.setForeground(new java.awt.Color(0, 0, 0));
        totalAmount.setText("Total Amount (VAT Included):");
        totalAmount.setBorder(null);
        checkoutPanel.add(totalAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 330, 170, -1));

        ShippingFee.setEditable(false);
        ShippingFee.setBackground(new java.awt.Color(108, 122, 137));
        ShippingFee.setForeground(new java.awt.Color(0, 0, 0));
        ShippingFee.setText("Shipping Fee:");
        ShippingFee.setBorder(null);
        checkoutPanel.add(ShippingFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 310, 160, -1));

        Subtotal.setEditable(false);
        Subtotal.setBackground(new java.awt.Color(108, 122, 137));
        Subtotal.setForeground(new java.awt.Color(0, 0, 0));
        Subtotal.setText("Merchandise Subtotal:");
        Subtotal.setBorder(null);
        checkoutPanel.add(Subtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 160, -1));

        placeBTN.setBackground(new java.awt.Color(0, 102, 204));
        placeBTN.setForeground(new java.awt.Color(255, 255, 255));
        placeBTN.setText("Place Order");
        placeBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        placeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeBTNActionPerformed(evt);
            }
        });
        checkoutPanel.add(placeBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 360, 90, -1));

        removeBTN.setBackground(new java.awt.Color(0, 102, 204));
        removeBTN.setForeground(new java.awt.Color(255, 255, 255));
        removeBTN.setText("Remove");
        removeBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        removeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBTNActionPerformed(evt);
            }
        });
        checkoutPanel.add(removeBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 90, -1));

        cnclBTN.setBackground(new java.awt.Color(0, 102, 204));
        cnclBTN.setForeground(new java.awt.Color(255, 255, 255));
        cnclBTN.setText("Cancel");
        cnclBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cnclBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnclBTNActionPerformed(evt);
            }
        });
        checkoutPanel.add(cnclBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 90, -1));

        chkTitle.setFont(new java.awt.Font("Elephant", 0, 24)); // NOI18N
        chkTitle.setForeground(new java.awt.Color(255, 255, 255));
        chkTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/online_shopping_system/Assets/DIAMONDicoSMALL.gif"))); // NOI18N
        chkTitle.setText("CHECKOUT");
        checkoutPanel.add(chkTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));

        paymentTable.setAutoCreateRowSorter(true);
        paymentTable.setBackground(new java.awt.Color(0, 102, 204));
        paymentTable.setForeground(new java.awt.Color(0, 0, 0));
        paymentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Price", "Quantity"
            }
        ));
        paymentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(paymentTable);

        checkoutPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 640, 210));

        paymentMethod.setBackground(new java.awt.Color(0, 102, 204));
        paymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash On Delivery", "Credit/Debit Card" }));
        paymentMethod.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        paymentMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentMethodActionPerformed(evt);
            }
        });
        checkoutPanel.add(paymentMethod, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 190, -1));

        lblPaymentMethod.setForeground(new java.awt.Color(255, 255, 255));
        lblPaymentMethod.setText("Payment Method: ");
        checkoutPanel.add(lblPaymentMethod, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));

        HiddenpaymentID.setEditable(false);
        HiddenpaymentID.setBackground(new java.awt.Color(108, 122, 137));
        HiddenpaymentID.setForeground(new java.awt.Color(108, 122, 137));
        HiddenpaymentID.setBorder(null);
        checkoutPanel.add(HiddenpaymentID, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, 60, -1));

        HiddenpaymentQuant.setEditable(false);
        HiddenpaymentQuant.setBackground(new java.awt.Color(108, 122, 137));
        HiddenpaymentQuant.setForeground(new java.awt.Color(108, 122, 137));
        HiddenpaymentQuant.setBorder(null);
        checkoutPanel.add(HiddenpaymentQuant, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 60, -1));

        HiddenpaymentName.setEditable(false);
        HiddenpaymentName.setBackground(new java.awt.Color(108, 122, 137));
        HiddenpaymentName.setForeground(new java.awt.Color(108, 122, 137));
        HiddenpaymentName.setBorder(null);
        checkoutPanel.add(HiddenpaymentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 20, 50, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(checkoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Order, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(checkoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Order, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void placeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeBTNActionPerformed
        try {
            String paymethod = paymentMethod.getSelectedItem().toString();
            String paytotal = AmountTotal.getText();
            String customer = JPsOnlineShopping.CustID.getText();

            conn = DriverManager.getConnection(URL, USERNAME, PASSWORD);
            ps = conn.prepareStatement("DELETE FROM payment WHERE customer_id = ?");
            ps.setString(1, customer);
            int c = ps.executeUpdate();
            if (c != 0) {
                JOptionPane.showMessageDialog(null, "Making a transaction!");
                ps = conn.prepareStatement("INSERT INTO orders (payment_method, payment_total, customer_id) "
                        + "VALUES(?,?,?)");
                ps.setString(1, paymethod);
                ps.setString(2, paytotal);
                ps.setString(3, customer);

                int d = ps.executeUpdate();

                if (d != 0) {
                    JOptionPane.showMessageDialog(null, "Sending message to our logistics partner!");
                    ps = conn.prepareStatement("SELECT MAX(order_id) AS current_order FROM orders");
                    rset = ps.executeQuery();

                    if (rset.next()) {
                        String orderid = rset.getString("current_order");
                        JOptionPane.showMessageDialog(null, "Your order had been added to our database\n and is waiting for payment!");
                        lblPM.setText(paymethod + ": ");
                        amountforpay.setText(paytotal);
                        orderID.setText("Order ID: " + orderid);

                        Order.setVisible(true);
                        checkoutPanel.setVisible(false);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "failed transaction!", "error!", 0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_placeBTNActionPerformed
    private JFrame frame;
    private void cnclBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnclBTNActionPerformed
        frame = new JFrame("Close");
        if (JOptionPane.showConfirmDialog(frame, "Are you sure you want to cancel order?", "Adding to cart",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_cnclBTNActionPerformed

    private void paymentMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentMethodActionPerformed
        if (paymentMethod.getSelectedItem() == "Credit/Debit Card") {
            JOptionPane.showMessageDialog(null, "We are not accepting cards at the moment!", "Error!", 0);
            paymentMethod.setSelectedItem("Cash On Delivery");
        }
    }//GEN-LAST:event_paymentMethodActionPerformed

    private void jBtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBtnBackActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        paymentTable();
        totalPayment();
    }//GEN-LAST:event_formWindowActivated

    private void paymentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymentTableMouseClicked
        try {
            DefaultTableModel RecordTable = (DefaultTableModel) paymentTable.getModel();
            int SelectedRows = paymentTable.getSelectedRow();

            HiddenpaymentID.setText(RecordTable.getValueAt(SelectedRows, 0).toString());
            HiddenpaymentName.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
            HiddenpaymentQuant.setText(RecordTable.getValueAt(SelectedRows, 3).toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Table Don't Exists", "Empty Table!", 0);
        }
    }//GEN-LAST:event_paymentTableMouseClicked

    private void removeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBTNActionPerformed
        try {
            int SelectedRowIndex = paymentTable.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) paymentTable.getModel();
            model.removeRow(SelectedRowIndex);
            model.setRowCount(0);

            conn = DriverManager.getConnection(URL, USERNAME, PASSWORD);
            ps = conn.prepareStatement("DELETE FROM payment WHERE payment_id = ?");

            ps.setString(1, HiddenpaymentID.getText());

            if (ps.executeUpdate() != 0) {
                JOptionPane.showMessageDialog(null, "item deleted successfully!");
                ps = conn.prepareStatement("UPDATE product SET product_stock = product_stock + ? WHERE product_name = ?");

                ps.setString(1, HiddenpaymentQuant.getText());
                ps.setString(2, HiddenpaymentName.getText());

                ps.executeUpdate();
            } else {
                JOptionPane.showMessageDialog(null, "item is not deleted!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_removeBTNActionPerformed

    private void OrderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_OrderMousePressed

    private void OrderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_OrderMouseDragged

    private void checkoutPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutPanelMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_checkoutPanelMousePressed

    private void checkoutPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutPanelMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_checkoutPanelMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(paymentTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(paymentTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(paymentTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(paymentTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new paymentTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AmountTotal;
    private javax.swing.JLabel CurrencySign;
    private javax.swing.JTextField HiddenpaymentID;
    private javax.swing.JTextField HiddenpaymentName;
    private javax.swing.JTextField HiddenpaymentQuant;
    private javax.swing.JPanel Order;
    private javax.swing.JTextField ShippingFee;
    private javax.swing.JTextField Subtotal;
    private javax.swing.JLabel amountforpay;
    private javax.swing.JPanel checkoutPanel;
    private javax.swing.JLabel chkTitle;
    private javax.swing.JButton cnclBTN;
    private javax.swing.JButton jBtnBack;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPM;
    private javax.swing.JLabel lblPaymentMethod;
    private javax.swing.JTextField merchTotal;
    private javax.swing.JLabel message;
    private javax.swing.JLabel orderID;
    private javax.swing.JLabel paymentJlbl;
    private javax.swing.JComboBox<String> paymentMethod;
    public static javax.swing.JTable paymentTable;
    private javax.swing.JButton placeBTN;
    private javax.swing.JButton removeBTN;
    private javax.swing.JTextField shippingTotal;
    private javax.swing.JTextField totalAmount;
    // End of variables declaration//GEN-END:variables
}
